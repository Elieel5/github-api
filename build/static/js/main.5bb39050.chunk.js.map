{"version":3,"sources":["Components/Footer/styles.ts","Components/Footer/index.tsx","Components/Header/styles.ts","Components/Header/index.tsx","pages/Profile/styles.ts","Components/ProfileData/styles.ts","Components/ProfileData/index.tsx","Components/RapoCard/styles.ts","Components/RapoCard/index.tsx","pages/Profile/index.tsx","pages/Repo/styles.ts","pages/Repo/index.tsx","styles/GlobalStyles.ts","App.tsx","index.tsx"],"names":["Container","styled","div","Line","GithubLogo","FaGithub","Footer","SearchForm","form","Header","useState","search","setSearch","navigate","useNavigate","href","onSubmit","event","preventDefault","toLocaleLowerCase","trim","placeholder","value","onChange","e","currentTarget","Main","LeftSide","RightSide","Repos","RepoIcon","RiBookmarkLine","Tab","Flex","Avatar","img","Row","ul","iconCSS","css","PeopleIcon","RiGroupLine","Column","CompanyIcon","RiBuilding4Line","LocationIcon","RiMapPin2Line","EmailIcon","RiMailLine","BlogIcon","RiLinksLine","ProfileData","username","name","avatarUrl","followers","following","company","location","email","blog","bio","src","alt","Topside","RiBookMarkLine","Botside","StarIcon","RiStarLine","ForkIcon","AiOutlineFork","RapoCard","reponame","language","description","stars","forks","languageClass","to","className","Profile","useParams","data","setData","useEffect","Promise","all","fetch","then","responses","a","userResponse","reposResponse","status","error","json","user","repos","TabContent","public_repos","login","avatar_url","map","item","key","owner","stargazers_count","LinkButton","GithubIcon","Repo","createGlobalStyle","App","path","element","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bb39050.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  margin: 25px 32px;\r\n`;\r\n\r\nexport const Line = styled.div`\r\n  max-width: 1280px;\r\n  width: 100%;\r\n  border-top: 1px solid var(--border);\r\n`;\r\n\r\nexport const GithubLogo = styled(FaGithub)`\r\n  margin-top: 25px;\r\n\r\n  fill: var(--border);\r\n  width: 24px;\r\n  height: 24px;\r\n  flex-shrink: 0;\r\n`;\r\n","import React from \"react\";\r\nimport { Container, Line, GithubLogo } from \"./styles\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Container>\r\n      <Line />\r\n      <GithubLogo />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import styled from \"styled-components\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  background: var(--header);\r\n  padding: 11px 16px;\r\n`;\r\n\r\nexport const GithubLogo = styled(FaGithub)`\r\n  fill: var(--logo);\r\n  width: 32px;\r\n  height: 32px;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nexport const SearchForm = styled.form`\r\n  padding-left: 16px;\r\n  width: 100%;\r\n\r\n  input {\r\n    background: var(--search);\r\n    outline: 0;\r\n    border-radius: 6px;\r\n    padding: 7px 12px;\r\n    width: 100%;\r\n\r\n    &:focus {\r\n      width: 318px;\r\n    }\r\n\r\n    transition: width 0.2s ease-out, color 0.2s ease-out;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { Container, GithubLogo, SearchForm } from \"./styles\";\r\n\r\nconst Header = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  function handleSubmit(event: React.FormEvent) {\r\n    event.preventDefault();\r\n\r\n    navigate(\"/\" + search.toLocaleLowerCase().trim());\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <a href=\"/\">\r\n        <GithubLogo />\r\n      </a>\r\n\r\n      <SearchForm onSubmit={handleSubmit}>\r\n        <input\r\n          placeholder=\"Pesquise um Usuario/Org\"\r\n          value={search}\r\n          onChange={(e) => setSearch(e.currentTarget.value)}\r\n        />\r\n      </SearchForm>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\nimport { RiBookmarkLine } from \"react-icons/ri\";\r\n\r\nexport const Container = styled.div`\r\n  --horizontalPadding: 16px;\r\n  --verticalPadding: 24px;\r\n\r\n  padding: var(--verticalPadding) var(--horizontalPadding);\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Main = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  margin: 0 auto;\r\n  max-width: 1280px;\r\n\r\n  @media (min-width: 768px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const LeftSide = styled.div`\r\n  padding: 0 var(--horizontalPadding);\r\n\r\n  @media (min-width: 768px) {\r\n    width: 25%;\r\n  }\r\n`;\r\n\r\nexport const RightSide = styled.div`\r\n  padding: 0 var(--horizontalPadding);\r\n\r\n  @media (min-width: 768px) {\r\n    width: 75%;\r\n  }\r\n`;\r\n\r\nexport const Repos = styled.div`\r\n  margin-top: var(----verticalPadding);\r\n\r\n  > h2 {\r\n    margin: 10px;\r\n    font-size: 16px;\r\n    font-weight: normal;\r\n  }\r\n  > div {\r\n    margin-top: 8px;\r\n\r\n    display: grid;\r\n    grid-gap: 16px;\r\n\r\n    grid-template-columns: 1fr;\r\n    @media (min-width: 758px) {\r\n      grid-template-columns: 1fr 1fr;\r\n      grid-auto-rows: minmax(min-content, max-content);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const RepoIcon = styled(RiBookmarkLine)`\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-right: 4px;\r\n`;\r\nexport const Tab = styled.div`\r\n  background: var(--primary);\r\n\r\n  .content {\r\n    display: flex;\r\n    align-items: center;\r\n    width: min-content;\r\n\r\n    padding: 14px 16px;\r\n\r\n    border-bottom: 2px solid var(--orange);\r\n\r\n    .label {\r\n      font-size: 14px;\r\n      padding: 0 7px;\r\n      font-weight: 600;\r\n    }\r\n    .number {\r\n      font-size: 12px;\r\n      background: var(--ticker);\r\n      padding: 2px 6px;\r\n      border-radius: 24px;\r\n    }\r\n  }\r\n  .line {\r\n    display: flex;\r\n    width: 200vw;\r\n    border-bottom: 1px solid var(--border);\r\n    margin-left: -50vw;\r\n  }\r\n\r\n  &.mobile {\r\n    margin-top: var(--verticalPadding);\r\n\r\n    .content {\r\n      margin: 0 auto;\r\n    }\r\n    @media (min-width: 768px) {\r\n      display: none;\r\n    }\r\n  }\r\n  &.desktop {\r\n    display: none;\r\n\r\n    @media (min-width: 768px) {\r\n      display: unset;\r\n\r\n      .wrapper {\r\n        display: flex;\r\n        margin: 0 auto;\r\n        max-width: 1280px;\r\n      }\r\n\r\n      .offset {\r\n        width: 25%;\r\n        margin-right: var(--horizontalPadding);\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport {\r\n  RiGroupLine,\r\n  RiBuilding4Line,\r\n  RiMapPin2Line,\r\n  RiMailLine,\r\n  RiLinksLine,\r\n} from \"react-icons/ri\";\r\n\r\nexport const Container = styled.div``;\r\n\r\nexport const Flex = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  > div {\r\n    margin-left: 24px;\r\n    > h1 {\r\n      font-size: 26px;\r\n      line-height: 1.25;\r\n      color: var(--gary-dark);\r\n      font-weight: 600;\r\n    }\r\n\r\n    > h2 {\r\n      font-size: 20px;\r\n      color: var(--username);\r\n      font-weight: 300;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n\r\n    > div {\r\n      margin-left: 0;\r\n      margin-top: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n  width: 16%;\r\n  border-radius: 50%;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 100%;\r\n    margin-top: -34px;\r\n  }\r\n`;\r\n\r\nexport const Row = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  > li {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    margin: 20px 0;\r\n\r\n    > span {\r\n      font-size: 14px;\r\n      color: var(--gray);\r\n    }\r\n    > * {\r\n      margin-right: 5px;\r\n    }\r\n    b {\r\n      margin-bottom: 2.5px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst iconCSS = css`\r\n  width: 16px;\r\n  height: 16px;\r\n  fill: var(--icon);\r\n  flex-shrink: 0;\r\n`;\r\n\r\nexport const PeopleIcon = styled(RiGroupLine)`\r\n  ${iconCSS}\r\n`;\r\n\r\nexport const Column = styled.ul`\r\n  li {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 14px;\r\n  }\r\n  li + li {\r\n    margin-top: 10px;\r\n  }\r\n  span {\r\n    margin-left: 5px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n`;\r\n\r\nexport const CompanyIcon = styled(RiBuilding4Line)`\r\n  ${iconCSS}\r\n`;\r\n\r\nexport const LocationIcon = styled(RiMapPin2Line)`\r\n  ${iconCSS}\r\n`;\r\n\r\nexport const EmailIcon = styled(RiMailLine)`\r\n  ${iconCSS}\r\n`;\r\n\r\nexport const BlogIcon = styled(RiLinksLine)`\r\n  ${iconCSS}\r\n`;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Container,\r\n  Flex,\r\n  Avatar,\r\n  Row,\r\n  PeopleIcon,\r\n  Column,\r\n  CompanyIcon,\r\n  LocationIcon,\r\n  EmailIcon,\r\n  BlogIcon,\r\n} from \"./styles\";\r\n\r\ninterface Props {\r\n  username: string;\r\n  name: string;\r\n  avatarUrl: string;\r\n  followers?: number;\r\n  following?: number;\r\n  company?: string;\r\n  location?: string;\r\n  email?: string;\r\n  blog?: string;\r\n  bio?: string;\r\n}\r\n\r\nconst ProfileData = ({\r\n  username,\r\n  name,\r\n  avatarUrl,\r\n  followers,\r\n  following,\r\n  company,\r\n  location,\r\n  email,\r\n  blog,\r\n  bio,\r\n}: Props) => {\r\n  return (\r\n    <Container>\r\n      <Flex>\r\n        <Avatar src={avatarUrl} alt={username} />\r\n        <div>\r\n          <h1>{name}</h1>\r\n          <h2>{username}</h2>\r\n        </div>\r\n      </Flex>\r\n\r\n      <Row>\r\n        <li>\r\n          <PeopleIcon />\r\n          <b>{followers}</b>\r\n          <span>followers</span>\r\n          <span>·</span>\r\n        </li>\r\n        <li>\r\n          <b>{following}</b>\r\n          <span>following</span>\r\n        </li>\r\n      </Row>\r\n\r\n      <Column>\r\n        {company && (\r\n          <li>\r\n            <CompanyIcon />\r\n            <span>{company}</span>\r\n          </li>\r\n        )}\r\n        {bio && (\r\n          <li>\r\n            <span>{bio}</span>\r\n          </li>\r\n        )}\r\n        {location && (\r\n          <li>\r\n            <LocationIcon />\r\n            <span>{location}</span>\r\n          </li>\r\n        )}\r\n        {email && (\r\n          <li>\r\n            <EmailIcon />\r\n            <span>{email}</span>\r\n          </li>\r\n        )}\r\n        {blog && (\r\n          <li>\r\n            <BlogIcon />\r\n            <span>{blog}</span>\r\n          </li>\r\n        )}\r\n      </Column>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProfileData;\r\n","import styled, { css } from \"styled-components\";\r\nimport { RiBookMarkLine, RiStarLine } from \"react-icons/ri\";\r\nimport { AiOutlineFork } from \"react-icons/ai\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 16px;\r\n  border: 1px solid var(--border);\r\n  border-radius: 6px;\r\n`;\r\n\r\nexport const Topside = styled.div`\r\n  > header {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  > a {\r\n    margin-left: 8px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: var(--link);\r\n\r\n    text-decoration: none;\r\n\r\n    &:focus,\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n\r\n  > p {\r\n    margin: 8px 0 16px;\r\n    font-size: 12px;\r\n    color: var(--gray);\r\n    letter-spacing: 0.1px;\r\n  }\r\n`;\r\n\r\nconst iconCSS = css`\r\n  width: 16px;\r\n  height: 16px;\r\n  fill: var(--icon);\r\n  flex-shrink: 0;\r\n`;\r\n\r\nexport const RepoIcon = styled(RiBookMarkLine)`\r\n  ${iconCSS}\r\n`;\r\n\r\nexport const Botside = styled.div`\r\n  > ul {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    > li {\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      margin-right: 16px;\r\n\r\n      > span {\r\n        margin-left: 5px;\r\n        font-size: 12px;\r\n        color: var(--gray);\r\n      }\r\n    }\r\n  }\r\n  .language {\r\n    width: 12px;\r\n    height: 12px;\r\n    border-radius: 50%;\r\n    flex-shrink: 0;\r\n\r\n    &.order {\r\n      background: var(--other-languague);\r\n    }\r\n    &.javascript {\r\n      background: var(--javascript);\r\n    }\r\n    &.typescript {\r\n      background: var(--typescript);\r\n    }\r\n    &.python {\r\n      background-color: #3572a5;\r\n    }\r\n    &.java {\r\n      background-color: #b07219;\r\n    }\r\n    &.ruby {\r\n      background-color: #701516;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StarIcon = styled(RiStarLine)`\r\n  ${iconCSS}\r\n`;\r\n\r\nexport const ForkIcon = styled(AiOutlineFork)`\r\n  ${iconCSS}\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Container,\r\n  Topside,\r\n  RepoIcon,\r\n  Botside,\r\n  StarIcon,\r\n  ForkIcon,\r\n} from \"./styles\";\r\n\r\ninterface Props {\r\n  username: string;\r\n  reponame: string;\r\n  description?: string;\r\n  language?: string;\r\n  stars: number;\r\n  forks: number;\r\n}\r\n\r\nconst RapoCard = ({\r\n  username,\r\n  reponame,\r\n  description,\r\n  language,\r\n  stars,\r\n  forks,\r\n}: Props) => {\r\n  const languageClass = language ? language.toLocaleLowerCase() : \"other\";\r\n\r\n  return (\r\n    <Container>\r\n      <Topside>\r\n        <header>\r\n          <RepoIcon />\r\n          <Link to={`/${username}/${reponame}`}>{reponame}</Link>\r\n        </header>\r\n        <p></p>\r\n      </Topside>\r\n\r\n      <Botside>\r\n        <ul>\r\n          <li>\r\n            <div className={`language ${languageClass}`} />\r\n            <span>{language}</span>\r\n          </li>\r\n          <li>\r\n            <StarIcon />\r\n            <span>{stars}</span>\r\n          </li>\r\n          <li>\r\n            <ForkIcon />\r\n            <span>{forks}</span>\r\n          </li>\r\n        </ul>\r\n      </Botside>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RapoCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Container,\r\n  Main,\r\n  LeftSide,\r\n  RightSide,\r\n  Repos,\r\n  RepoIcon,\r\n  Tab,\r\n} from \"./styles\";\r\n\r\nimport ProfileData from \"../../Components/ProfileData\";\r\nimport RepoCard from \"../../Components/RapoCard\";\r\n\r\nimport { APIRepo, APIUser } from \"../../@types\";\r\n\r\ninterface Data {\r\n  user?: APIUser;\r\n  repos?: APIRepo[];\r\n  error?: string;\r\n}\r\n\r\nconst Profile = () => {\r\n  const { username = \"\" } = useParams();\r\n  const [data, setData] = useState<Data>();\r\n\r\n  useEffect(() => {\r\n    Promise.all([\r\n      fetch(`https://api.github.com/users/${username}`),\r\n      fetch(`https://api.github.com/users/${username}/repos`),\r\n    ]).then(async (responses) => {\r\n      const [userResponse, reposResponse] = responses;\r\n\r\n      if (userResponse.status === 404) {\r\n        setData({ error: \"Busque por um Usuario/Org valido\" });\r\n        return;\r\n      }\r\n\r\n      const user = await userResponse.json();\r\n      const repos = await reposResponse.json();\r\n\r\n      setData({\r\n        user,\r\n        repos,\r\n      });\r\n    });\r\n  }, [username]);\r\n\r\n  if (data?.error) {\r\n    return <h1>{data.error}</h1>;\r\n  }\r\n\r\n  if (!data?.user || !data?.repos) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n\r\n  const TabContent = () => (\r\n    <div className=\"content\">\r\n      <RepoIcon />\r\n\r\n      <span className=\"label\">Repositorios</span>\r\n      <span className=\"number\">{data.user?.public_repos}</span>\r\n    </div>\r\n  );\r\n  return (\r\n    <Container>\r\n      <Tab className=\"desktop\">\r\n        <div className=\"wrapper\">\r\n          <span className=\"offset\" />\r\n          <TabContent />\r\n        </div>\r\n\r\n        <span className=\"line\" />\r\n      </Tab>\r\n      <Main>\r\n        <LeftSide>\r\n          <ProfileData\r\n            username={data.user.login}\r\n            name={data.user.name}\r\n            avatarUrl={data.user.avatar_url}\r\n            followers={data.user.followers}\r\n            following={data.user.following}\r\n            company={data.user.company}\r\n            location={data.user.location}\r\n            email={data.user.email}\r\n            blog={data.user.blog}\r\n            bio={data.user.bio}\r\n          />\r\n        </LeftSide>\r\n\r\n        <RightSide>\r\n          <Tab className=\"mobile\">\r\n            <TabContent />\r\n            <span className=\"line\" />\r\n          </Tab>\r\n          <Repos>\r\n            <h2>Random repos</h2>\r\n\r\n            <div>\r\n              {data.repos.map((item) => (\r\n                <RepoCard\r\n                  key={item.name}\r\n                  username={item.owner.login}\r\n                  reponame={item.name}\r\n                  description={item.description}\r\n                  language={item.language}\r\n                  stars={item.stargazers_count}\r\n                  forks={item.forks}\r\n                />\r\n              ))}\r\n            </div>\r\n          </Repos>\r\n        </RightSide>\r\n      </Main>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import styled, { css } from \"styled-components\";\r\nimport { RiBookMarkLine, RiStarLine } from \"react-icons/ri\";\r\nimport { AiOutlineFork } from \"react-icons/ai\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px;\r\n\r\n  > p {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst iconCSS = css`\r\n  width: 16px;\r\n  height: 16px;\r\n  fill: var(--icon);\r\n  flex-shrink: 0;\r\n`;\r\n\r\nexport const RepoIcon = styled(RiBookMarkLine)`\r\n  ${iconCSS}\r\n`;\r\n\r\nexport const Stats = styled.ul`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  > li {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 9px;\r\n\r\n    > * {\r\n      margin-right: 7px;\r\n      color: var(--gray);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StarIcon = styled(RiStarLine)`\r\n  ${iconCSS}\r\n`;\r\n\r\nexport const ForkIcon = styled(AiOutlineFork)`\r\n  ${iconCSS}\r\n`;\r\n\r\nexport const LinkButton = styled.a`\r\n  text-decoration: none;\r\n\r\n  margin-top: 24px;\r\n  background: var(--gray-dark);\r\n  padding: 12px 17px;\r\n  border-radius: 24px;\r\n  width: max-content;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  > span {\r\n    color: var(--primary);\r\n  }\r\n\r\n  > svg {\r\n    fill: var(--primary);\r\n    margin-right: 10px;\r\n    margin-top: -3px;\r\n  }\r\n`;\r\n\r\nexport const GithubIcon = styled(FaGithub)`\r\n  ${iconCSS}\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Container, LinkButton, GithubIcon } from \"./styles\";\r\n\r\nconst Repo = () => {\r\n  return (\r\n    <Container>\r\n      <LinkButton href={\"https://github.com/Elieel5\"}>\r\n        <GithubIcon />\r\n        <span>View on GitHub</span>\r\n      </LinkButton>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Repo;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n    html {\r\n        min-height: 100%;\r\n        background: var(--primary);\r\n    }\r\n    *, button, input{\r\n        border: 0;\r\n        background: none;\r\n        font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;\r\n        color: var(--black);\r\n    }\r\n    ul{\r\n        list-style: none;\r\n    }\r\n    :root{\r\n        --primary: #fff;\r\n        --black: #1b1f23;\r\n        --gray: #586069;\r\n        --gray-light: #6a737d;\r\n        --gray-dark: #24292e;\r\n        --orange: #f9826c;\r\n        --logo: #fff;\r\n        --header: #24292e;\r\n        --username: #666;\r\n        --search: rgba(255, 255, 255, 0.13);\r\n        --search-placeholder: hsla(0, 0%, 100%, .75);\r\n        --icon: #6a737d;\r\n        --link: #0366d6;\r\n        --border: #e1e4e8;\r\n        --ticker: rgba(209,213,218, .5);\r\n        \r\n        --calendar-scale-0: #ebedf0;\r\n        --calendar-scale-1: #9BE9A8;\r\n        --calendar-scale-2: #3FC463;\r\n        --calendar-scale-3: #30A14E;\r\n        --calendar-scale-4: #216E3A;\r\n        --javascript: #f1e05a;\r\n        --typescript: #2b7489;\r\n        --other-language: #8257e5;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nimport Footer from \"./Components/Footer\";\r\nimport Header from \"./Components/Header\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Repo from \"./pages/Repo\";\r\n\r\nimport GlobalStyles from \"./styles/GlobalStyles\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n\r\n      <Routes>\r\n        <Route path=\"/\" element={<Profile />} />\r\n        <Route path=\"/:username\" element={<Profile />} />\r\n        <Route path=\"/:username/:reponame\" element={<Repo />} />\r\n      </Routes>\r\n\r\n      <Footer />\r\n      <GlobalStyles />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}